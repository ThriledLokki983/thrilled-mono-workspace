// =============================================================================
// LAYOUT - GRID SYSTEM
// Flexible grid system for responsive layouts
// =============================================================================

@use '../foundations/breakpoints' as *;

// Grid container
.grid {
  display: grid;
  gap: var(--spacing-grid-gap);
}

.grid--gap-sm {
  gap: var(--spacing-sm);
}

.grid--gap-md {
  gap: var(--spacing-grid-gap);
}

.grid--gap-lg {
  gap: var(--spacing-grid-gap-lg);
}

.grid--gap-xl {
  gap: var(--spacing-2xl);
}

// Grid columns - responsive
.grid--cols-1 {
  grid-template-columns: repeat(1, 1fr);
}

.grid--cols-2 {
  grid-template-columns: repeat(2, 1fr);
}

.grid--cols-3 {
  grid-template-columns: repeat(3, 1fr);
}

.grid--cols-4 {
  grid-template-columns: repeat(4, 1fr);
}

.grid--cols-5 {
  grid-template-columns: repeat(5, 1fr);
}

.grid--cols-6 {
  grid-template-columns: repeat(6, 1fr);
}

// Responsive grid columns
@include screen-sm {
  .grid--sm-cols-1 {
    grid-template-columns: repeat(1, 1fr);
  }
  .grid--sm-cols-2 {
    grid-template-columns: repeat(2, 1fr);
  }
  .grid--sm-cols-3 {
    grid-template-columns: repeat(3, 1fr);
  }
  .grid--sm-cols-4 {
    grid-template-columns: repeat(4, 1fr);
  }
}

@include screen-md {
  .grid--md-cols-1 {
    grid-template-columns: repeat(1, 1fr);
  }
  .grid--md-cols-2 {
    grid-template-columns: repeat(2, 1fr);
  }
  .grid--md-cols-3 {
    grid-template-columns: repeat(3, 1fr);
  }
  .grid--md-cols-4 {
    grid-template-columns: repeat(4, 1fr);
  }
  .grid--md-cols-5 {
    grid-template-columns: repeat(5, 1fr);
  }
  .grid--md-cols-6 {
    grid-template-columns: repeat(6, 1fr);
  }
}

@include screen-lg {
  .grid--lg-cols-1 {
    grid-template-columns: repeat(1, 1fr);
  }
  .grid--lg-cols-2 {
    grid-template-columns: repeat(2, 1fr);
  }
  .grid--lg-cols-3 {
    grid-template-columns: repeat(3, 1fr);
  }
  .grid--lg-cols-4 {
    grid-template-columns: repeat(4, 1fr);
  }
  .grid--lg-cols-5 {
    grid-template-columns: repeat(5, 1fr);
  }
  .grid--lg-cols-6 {
    grid-template-columns: repeat(6, 1fr);
  }
}

// Grid column span
.col-span-1 {
  grid-column: span 1;
}
.col-span-2 {
  grid-column: span 2;
}
.col-span-3 {
  grid-column: span 3;
}
.col-span-4 {
  grid-column: span 4;
}
.col-span-5 {
  grid-column: span 5;
}
.col-span-6 {
  grid-column: span 6;
}
.col-span-full {
  grid-column: 1 / -1;
}

// Flexbox utilities
.flex {
  display: flex;
}

.flex--inline {
  display: inline-flex;
}

.flex--col {
  flex-direction: column;
}

.flex--row {
  flex-direction: row;
}

.flex--wrap {
  flex-wrap: wrap;
}

.flex--nowrap {
  flex-wrap: nowrap;
}

// Flex alignment
.flex--items-start {
  align-items: flex-start;
}
.flex--items-center {
  align-items: center;
}
.flex--items-end {
  align-items: flex-end;
}
.flex--items-stretch {
  align-items: stretch;
}

.flex--justify-start {
  justify-content: flex-start;
}
.flex--justify-center {
  justify-content: center;
}
.flex--justify-end {
  justify-content: flex-end;
}
.flex--justify-between {
  justify-content: space-between;
}
.flex--justify-around {
  justify-content: space-around;
}
.flex--justify-evenly {
  justify-content: space-evenly;
}

// Flex item utilities
.flex-1 {
  flex: 1 1 0%;
}
.flex-auto {
  flex: 1 1 auto;
}
.flex-initial {
  flex: 0 1 auto;
}
.flex-none {
  flex: none;
}

// Gap utilities for flexbox
.flex--gap-xs {
  gap: var(--spacing-xs);
}
.flex--gap-sm {
  gap: var(--spacing-sm);
}
.flex--gap-md {
  gap: var(--spacing-md);
}
.flex--gap-lg {
  gap: var(--spacing-lg);
}
.flex--gap-xl {
  gap: var(--spacing-xl);
}
.flex--gap-2xl {
  gap: var(--spacing-2xl);
}
