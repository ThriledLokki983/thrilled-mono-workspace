@use 'sass:map';

// Typography System
$font-families: (
  heading: ('Satoshi', 'PwC Helvetica Neue', 'Helvetica Neue', 'Helvetica', sans-serif),
  body: ('Satoshi', 'PwC Helvetica Neue', 'Helvetica Neue', 'Helvetica', sans-serif),
  ui: ('Satoshi', 'PwC Helvetica Neue', 'Helvetica Neue', 'Helvetica', sans-serif),
  system: (-apple-system, system-ui, BlinkMacSystemFont,
    'Segoe UI', Roboto, Helvetica, Arial, sans-serif,
    'Apple Color Emoji', 'Segoe UI Emoji', 'Segoe UI Symbol')
);

// Typography Scale - Refined and Elegant
$typography: (
  display: (
    font-size: 4rem,      // 64px
    line-height: 1.1,     // Tighter for headlines
    font-weight: 500,     // Medium weight for sophistication
    letter-spacing: -0.04em,
    font-family: var(--font-heading)
  ),
  h1: (
    font-size: 3rem,      // 48px
    line-height: 1.15,
    font-weight: 500,
    letter-spacing: -0.03em,
    font-family: var(--font-heading)
  ),
  h2: (
    font-size: 2.25rem,   // 36px
    line-height: 1.2,
    font-weight: 500,
    letter-spacing: -0.02em,
    font-family: var(--font-heading)
  ),
  h3: (
    font-size: 1.75rem,   // 28px
    line-height: 1.3,
    font-weight: 500,
    letter-spacing: -0.02em,
    font-family: var(--font-heading)
  ),
  h4: (
    font-size: 1.375rem,  // 22px
    line-height: 1.4,
    font-weight: 500,
    letter-spacing: -0.01em,
    font-family: var(--font-heading)
  ),
  body-lg: (
    font-size: 1.125rem,  // 18px
    line-height: 1.6,
    font-weight: 400,
    letter-spacing: -0.01em,
    font-family: var(--font-body)
  ),
  body: (
    font-size: 1rem,      // 16px
    line-height: 1.6,
    font-weight: 400,
    letter-spacing: 0,
    font-family: var(--font-body)
  ),
  small: (
    font-size: 0.875rem,  // 14px
    line-height: 1.5,
    font-weight: 400,
    letter-spacing: 0.01em,
    font-family: var(--font-body)
  ),
  caption: (
    font-size: 0.75rem,   // 12px
    line-height: 1.5,
    font-weight: 400,
    letter-spacing: 0.02em,
    font-family: var(--font-ui)
  )
);

// Border System
$borders: (
  light: (
    color: rgba(0, 0, 0, 0.05),
    shadow: 0 0 1px rgba(0, 0, 0, 0.03)
  ),
  medium: (
    color: rgba(0, 0, 0, 0.1),
    shadow: 0 0 2px rgba(0, 0, 0, 0.05)
  ),
  strong: (
    color: rgba(0, 0, 0, 0.15),
    shadow: 0 1px 3px rgba(0, 0, 0, 0.1)
  )
);

// Generate CSS variables for borders
:root {
  // Border colors
  --border-light: #{map.get($borders, "light", "color")};
  --border-medium: #{map.get($borders, "medium", "color")};
  --border-strong: #{map.get($borders, "strong", "color")};
  
  // Border shadows
  --shadow-light: #{map.get($borders, "light", "shadow")};
  --shadow-medium: #{map.get($borders, "medium", "shadow")};
  --shadow-strong: #{map.get($borders, "strong", "shadow")};
}

// Spacing Scale
$spacing: (
  xs: 0.25rem,   // 4px
  sm: 0.5rem,    // 8px
  md: 1rem,      // 16px
  lg: 1.5rem,    // 24px
  xl: 2rem,      // 32px
  2xl: 3rem,     // 48px
  3xl: 4rem,     // 64px
  gutter: 1rem,  // Base gutter
  site: 1.5rem   // Site gutter
);

// Border Radius
$border-radius: (
  sm: 0.125rem,  // 2px
  md: 0.25rem,   // 4px
  lg: 0.5rem,    // 8px
  xl: 1rem       // 16px
);

// Icon Sizes
$icon-sizes: (
  sm: 1rem,      // 16px
  md: 1.5rem,    // 24px
  lg: 2rem       // 32px
);

// Transitions
$transitions: (
  fast: 0.15s ease,
  base: 0.25s ease,
  slow: 0.35s ease,
  layout: 0.35s ease
);

// Button Variants
$button-variants: (
  primary: (
    background: var(--color-button-primary-bg),
    color: var(--color-button-primary-text),
    hover: var(--color-brand-accent),
    active: var(--color-brand-accent)
  ),
  secondary: (
    background: var(--color-button-secondary-bg),
    color: var(--color-button-secondary-text),
    hover: var(--color-brand-secondary),
    active: var(--color-brand-secondary)
  ),
  outline: (
    background: transparent,
    color: var(--color-text-primary),
    border: var(--color-border-primary),
    hover: var(--color-bg-secondary)
  )
);

// Input Variants
$input-variants: (
  default: (
    background: var(--color-bg-tertiary),
    border: var(--color-border-primary),
    text: var(--color-text-primary),
    placeholder: var(--color-text-tertiary)
  ),
  error: (
    border: var(--color-error),
    background: rgba(var(--color-error), 0.1)
  )
);

// Card Variants
$card-variants: (
  default: (
    background: var(--color-surface-1),
    border: var(--color-border-secondary),
    shadow: var(--shadow-sm)
  ),
  elevated: (
    background: var(--color-surface-1),
    shadow: var(--shadow-md)
  )
);

:root {
  // Set font family CSS variables
  --font-heading: #{map.get($font-families, heading)};
  --font-body: #{map.get($font-families, body)};
  --font-ui: #{map.get($font-families, ui)};
  --font-system: #{map.get($font-families, system)};
  
  // Set border radius CSS variables
  --radius-sm: #{map.get($border-radius, sm)};
  --radius-md: #{map.get($border-radius, md)};
  --radius-lg: #{map.get($border-radius, lg)};
  --radius-xl: #{map.get($border-radius, xl)};
  
  // Set spacing CSS variables
  --space-xs: #{map.get($spacing, xs)};
  --space-sm: #{map.get($spacing, sm)};
  --space-md: #{map.get($spacing, md)};
  --space-lg: #{map.get($spacing, lg)};
  --space-xl: #{map.get($spacing, xl)};
  --space-2xl: #{map.get($spacing, 2xl)};
  --space-3xl: #{map.get($spacing, 3xl)};
  --space-gutter: #{map.get($spacing, gutter)};
  --space-site: #{map.get($spacing, site)};
}
