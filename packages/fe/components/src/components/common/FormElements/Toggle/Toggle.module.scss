// @use '@styles/utility' as *;

.toggle {
  position: relative;
  display: inline-flex;
  align-items: center;
  gap: var(--space-xs);
  cursor: pointer;
  user-select: none;
  font-family: var(--font-ui);
  transition: opacity 0.2s ease-out;

  input {
    position: absolute;
    opacity: 0;
    cursor: pointer;
    height: 0;
    width: 0;
  }

  .switch {
    position: relative;
    display: inline-block;
    width: 36px;
    height: 20px;
    background-color: color-mix(in srgb, var(--color-border-primary) 15%, transparent);
    border: 1.5px solid var(--color-border-primary);
    border-radius: var(--radius-full, 9999px);
    transition: all 0.3s var(--transition-ease);
    backdrop-filter: var(--blur-sm);

    &:after {
      content: "";
      position: absolute;
      top: 1px;
      left: 1px;
      width: 14px;
      height: 14px;
      background-color: var(--color-surface-1);
      border-radius: 50%;
      transition: all 0.3s var(--transition-ease);
      box-shadow: 0 1px 2px rgba(0, 0, 0, 0.1);
    }
  }

  &.small .switch {
    width: 28px;
    height: 16px;

    &:after {
      width: 10px;
      height: 10px;
    }
  }

  &.large .switch {
    width: 44px;
    height: 24px;

    &:after {
      width: 18px;
      height: 18px;
    }
  }

  &:hover input ~ .switch {
    border-color: var(--color-brand-primary);
    background-color: color-mix(in srgb, var(--color-brand-primary) 12%, transparent);
    box-shadow: 0 0 0 3px color-mix(in srgb, var(--color-brand-primary) 8%, transparent);
  }

  input:checked ~ .switch {
    background-color: var(--color-brand-primary);
    border-color: var(--color-brand-primary);
    box-shadow: var(--shadow-sm);

    &:after {
      background-color: var(--color-surface-1);
      transform: translateX(16px);
      box-shadow: var(--shadow-sm);
    }
  }

  &.small input:checked ~ .switch:after {
    transform: translateX(12px);
  }

  &.large input:checked ~ .switch:after {
    transform: translateX(20px);
  }

  input:disabled ~ .switch {
    background-color: var(--color-input-disabled);
    border-color: var(--color-border-secondary);
    cursor: not-allowed;
    opacity: 0.6;
    box-shadow: none;

    &:after {
      background-color: var(--color-border-secondary);
      box-shadow: none;
    }
  }

  input:disabled ~ .label {
    color: var(--color-text-tertiary);
    cursor: not-allowed;
    opacity: 0.6;
  }

  .label {
    font-size: 0.875rem;
    line-height: 1.4;
    color: var(--color-text-primary);
    font-weight: 450;
    letter-spacing: -0.01em;
  }

  .error {
    color: var(--color-error);
    font-size: 0.75rem;
    margin-top: var(--space-xs);
    font-weight: 450;
  }

  .helper {
    color: var(--color-text-secondary);
    font-size: 0.75rem;
    margin-top: var(--space-xs);
    font-weight: 450;
    opacity: 0.8;
  }
}

// Dark mode adjustments
:global(.dark) {
  .toggle {
    .switch {
      background-color: var(--color-surface-2);
      border-color: var(--color-border-primary);

      &:after {
        background-color: var(--color-surface-1);
      }
    }

    &:hover input ~ .switch {
      border-color: var(--color-brand-primary);
      background-color: color-mix(in srgb, var(--color-brand-primary) 12%, transparent);
    }
  }
}
