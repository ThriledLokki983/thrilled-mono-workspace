// @use '@styles/utils' as *;

.inputWrapper {
  --input-height: 48px; // Default medium size
  --input-font-size: 1rem;
  --focus-ring-color: var(--color-primary-light);
  --error-ring-color: var(--color-error-light);
  --hover-ring-color: var(--color-border-hover-light, rgba(0, 0, 0, 0.08));
  --disabled-ring-color: var(--color-surface-3, #f5f5f5);

  display: flex;
  flex-direction: column;
  gap: var(--space-2xs);
  width: 100%;
  position: relative;

  &[data-has-error="true"] {
    --focus-ring-color: var(--error-ring-color);

    .input {
      border-color: var(--color-error);
    }

    .icon {
      color: var(--color-error);
    }

    /* Only apply box-shadow when focused and has error */
    &[data-is-focused="true"] {
      .input {
        box-shadow: 0 0 0 3px var(--error-ring-color);
      }
    }
  }

  &[data-is-focused="true"] {
    .input {
      border-color: var(--color-primary);
      box-shadow: 0 0 0 3px var(--focus-ring-color);
    }

    .icon {
      color: var(--color-primary);
    }
  }

  &[data-is-disabled="true"] {
    opacity: 0.7;
    cursor: not-allowed;

    .input {
      background-color: var(--color-surface-2);
      cursor: not-allowed;
      box-shadow: 0 0 0 2px var(--disabled-ring-color);
    }
  }

  &[data-size="small"] {
    --input-height: 36px;
    --input-font-size: 0.875rem;

    .input {
      padding: 0 var(--space-xs);
      padding-left: var(--space-md);
    }
  }

  &[data-size="large"] {
    --input-height: 56px;
    --input-font-size: 1.125rem;

    .input {
      padding: 0 var(--space-md);
      padding-left: var(--space-xl);
    }
  }
}

.label {
  color: var(--color-text-secondary);
  font-size: var(--input-font-size);
  font-weight: 500;
  transition: color 0.2s ease-out;
  margin-bottom: var(--space-3xs);
}

.required {
  color: var(--color-error);
  margin-left: var(--space-3xs);
}

.inputContainer {
  position: relative;
  width: 100%;
}

.input {
  width: 100%;
  height: var(--input-height);
  padding-block: calc(var(--space-md) - 5px) var(--space-sm);
  padding-inline: calc(var(--space-2xl) - 8px) var(--space-xl);
  border: 1.5px solid var(--color-border-primary);
  border-radius: var(--radius-md);
  background-color: var(--color-surface-1);
  color: var(--color-text-primary);
  font-size: var(--input-font-size);
  transition: all 0.2s ease-out;

  &::placeholder {
    color: var(--color-text-tertiary);
  }

  &:hover:not(:disabled) {
    border-color: var(--color-border-hover);
    background-color: color-mix(in srgb, var(--color-surface-1) 98%, var(--color-primary));
    box-shadow: 0 0 0 3px var(--hover-ring-color);
  }

  &:focus {
    outline: none;
    border-color: var(--color-primary);
    box-shadow: 0 0 0 3px var(--focus-ring-color);
  }

  &:disabled {
    background-color: var(--color-surface-2);
    color: var(--color-text-tertiary);
    cursor: not-allowed;
    box-shadow: 0 0 0 2px var(--disabled-ring-color);
  }
}

.icon {
  position: absolute;
  left: var(--space-sm);
  top: 50%;
  transform: translateY(-50%);
  display: flex;
  align-items: center;
  justify-content: center;
  color: var(--color-text-secondary);
  transition: color 0.2s ease-out;
  pointer-events: none;

  inline-size: var(--space-lg);
  block-size: var(--space-lg);
  margin-left: 5px;

  > svg {
    width: 100%;
    height: 100%;
    color: inherit;
  }
}

.passwordToggle {
  position: absolute;
  right: var(--space-sm);
  top: 50%;
  transform: translateY(-50%);
  display: flex;
  align-items: center;
  justify-content: center;
  padding: var(--space-3xs);
  border: none;
  background: none;
  color: var(--color-text-secondary);
  cursor: pointer;
  transition: color 0.2s ease-out;
  border-radius: var(--radius-sm);

  &:hover {
    color: var(--color-text-primary);
    background-color: color-mix(in srgb, var(--color-surface-1) 90%, var(--color-primary));
  }

  &:focus {
    outline: none;
    box-shadow: 0 0 0 2px var(--focus-ring-color);
  }
}

.focusRing {
  position: absolute;
  inset: -4px;
  border-radius: calc(var(--radius-md) + 4px);
  pointer-events: none;
  background: radial-gradient(
    circle at var(--x, 50%) var(--y, 50%),
    var(--focus-ring-color) 0%,
    transparent 70%
  );
  opacity: 0.08;
}

.bottom {
  min-height: 20px;
  margin-top: var(--space-3xs);
}

.error {
  color: var(--color-error);
  font-size: 0.875rem;
}

.helperText {
  color: var(--color-text-tertiary);
  font-size: 0.875rem;
}

/* React Aria specific styles */
[data-focus-visible] .input {
  outline: none;
  border-color: var(--color-primary);
  box-shadow: 0 0 0 3px var(--focus-ring-color);
}

/* Hover state */
.inputWrapper:hover:not([data-disabled]) .input:not(:focus) {
  border-color: var(--color-border-hover);
  box-shadow: 0 0 0 3px var(--hover-ring-color);
}

/* Invalid state - only show box-shadow when focused */
[data-invalid] .input {
  border-color: var(--color-error);
}

/* Focus and invalid combined */
[data-focus-visible][data-invalid] .input {
  border-color: var(--color-error);
  box-shadow: 0 0 0 3px var(--error-ring-color);
}

/* Disabled state */
[data-disabled] .input {
  opacity: 0.7;
  background-color: var(--color-surface-2);
  cursor: not-allowed;
  box-shadow: 0 0 0 2px var(--disabled-ring-color);
}
