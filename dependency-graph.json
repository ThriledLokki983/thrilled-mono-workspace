{
  "graph": {
    "nodes": {
      "@thrilled/faithcircle-be-e2e": {
        "name": "@thrilled/faithcircle-be-e2e",
        "type": "lib",
        "data": {
          "root": "apps/be/faithcircle/faithcircle-be-e2e",
          "projectType": "library",
          "targets": {
            "typecheck": {
              "dependsOn": ["^typecheck"],
              "options": {
                "cwd": "apps/be/faithcircle/faithcircle-be-e2e",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": ["typescript"]
                }
              ],
              "outputs": [
                "{projectRoot}/out-tsc/faithcircle-be-e2e/**/*.d.ts",
                "{projectRoot}/out-tsc/faithcircle-be-e2e/tsconfig.tsbuildinfo"
              ],
              "syncGenerators": ["@nx/js:typescript-sync"],
              "metadata": {
                "technologies": ["typescript"],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "yarn tsc --build --help",
                  "example": {
                    "args": ["--force"]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "apps/be/faithcircle/faithcircle-be-e2e",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "yarn eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "@thrilled/faithcircle-be-e2e",
          "implicitDependencies": [],
          "tags": []
        }
      },
      "@thrilled/faithcircle-be": {
        "name": "@thrilled/faithcircle-be",
        "type": "app",
        "data": {
          "root": "apps/be/faithcircle/faithcircle-be",
          "projectType": "application",
          "targets": {
            "typecheck": {
              "dependsOn": ["^typecheck"],
              "options": {
                "cwd": "apps/be/faithcircle/faithcircle-be",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                },
                {
                  "externalDependencies": ["typescript"]
                }
              ],
              "outputs": [
                "{projectRoot}/**/*.js",
                "{projectRoot}/**/*.cjs",
                "{projectRoot}/**/*.mjs",
                "{projectRoot}/**/*.jsx",
                "{projectRoot}/**/*.js.map",
                "{projectRoot}/**/*.jsx.map",
                "{projectRoot}/**/*.d.ts",
                "{projectRoot}/**/*.d.cts",
                "{projectRoot}/**/*.d.mts",
                "{projectRoot}/**/*.d.ts.map",
                "{projectRoot}/**/*.d.cts.map",
                "{projectRoot}/**/*.d.mts.map",
                "{projectRoot}/tsconfig.tsbuildinfo",
                "{projectRoot}/dist/**/*.d.ts",
                "{projectRoot}/dist/tsconfig.app.tsbuildinfo",
                "{projectRoot}/out-tsc/jest/**/*.d.ts",
                "{projectRoot}/out-tsc/jest/tsconfig.tsbuildinfo"
              ],
              "syncGenerators": ["@nx/js:typescript-sync"],
              "metadata": {
                "technologies": ["typescript"],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "yarn tsc --build --help",
                  "example": {
                    "args": ["--force"]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "apps/be/faithcircle/faithcircle-be",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "yarn eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "options": {
                "cwd": "apps/be/faithcircle/faithcircle-be",
                "args": ["--node-env=production"],
                "command": "webpack-cli build"
              },
              "cache": true,
              "dependsOn": ["^build"],
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": ["webpack-cli"]
                }
              ],
              "outputs": [
                "{workspaceRoot}/apps/be/faithcircle/faithcircle-be/dist"
              ],
              "metadata": {
                "technologies": ["webpack"],
                "description": "Runs Webpack build",
                "help": {
                  "command": "yarn webpack-cli build --help",
                  "example": {
                    "options": {
                      "json": "stats.json"
                    },
                    "args": ["--profile"]
                  }
                }
              },
              "syncGenerators": ["@nx/js:typescript-sync"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve": {
              "continuous": true,
              "options": {
                "cwd": "apps/be/faithcircle/faithcircle-be",
                "args": ["--node-env=development"],
                "command": "webpack-cli serve"
              },
              "metadata": {
                "technologies": ["webpack"],
                "description": "Starts Webpack dev server",
                "help": {
                  "command": "yarn webpack-cli serve --help",
                  "example": {
                    "options": {
                      "args": ["--client-progress", "--history-api-fallback "]
                    }
                  }
                }
              },
              "syncGenerators": ["@nx/js:typescript-sync"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "preview": {
              "continuous": true,
              "options": {
                "cwd": "apps/be/faithcircle/faithcircle-be",
                "args": ["--node-env=production"],
                "command": "webpack-cli serve"
              },
              "metadata": {
                "technologies": ["webpack"],
                "description": "Starts Webpack dev server in production mode",
                "help": {
                  "command": "yarn webpack-cli serve --help",
                  "example": {
                    "options": {
                      "args": ["--client-progress", "--history-api-fallback "]
                    }
                  }
                }
              },
              "syncGenerators": ["@nx/js:typescript-sync"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve-static": {
              "continuous": true,
              "dependsOn": ["build"],
              "executor": "@nx/web:file-server",
              "options": {
                "buildTarget": "build",
                "spa": true
              },
              "syncGenerators": ["@nx/js:typescript-sync"],
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": ["^build"],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": ["build-deps"],
              "executor": "nx:run-commands",
              "options": {
                "command": "yarn nx watch --projects faithcircle-be --includeDependentProjects -- yarn nx build-deps faithcircle-be"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "metadata": {},
          "name": "@thrilled/faithcircle-be",
          "implicitDependencies": [],
          "tags": []
        }
      },
      "custom-eslint": {
        "name": "custom-eslint",
        "type": "lib",
        "data": {
          "root": "packages/shared/custom-eslint",
          "projectType": "library",
          "targets": {
            "typecheck": {
              "dependsOn": ["build", "^typecheck"],
              "options": {
                "cwd": "packages/shared/custom-eslint",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                },
                {
                  "externalDependencies": ["typescript"]
                }
              ],
              "outputs": [
                "{projectRoot}/**/*.js",
                "{projectRoot}/**/*.cjs",
                "{projectRoot}/**/*.mjs",
                "{projectRoot}/**/*.jsx",
                "{projectRoot}/**/*.js.map",
                "{projectRoot}/**/*.jsx.map",
                "{projectRoot}/**/*.d.ts",
                "{projectRoot}/**/*.d.cts",
                "{projectRoot}/**/*.d.mts",
                "{projectRoot}/**/*.d.ts.map",
                "{projectRoot}/**/*.d.cts.map",
                "{projectRoot}/**/*.d.mts.map",
                "{projectRoot}/tsconfig.tsbuildinfo"
              ],
              "syncGenerators": ["@nx/js:typescript-sync"],
              "metadata": {
                "technologies": ["typescript"],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "yarn tsc --build --help",
                  "example": {
                    "args": ["--force"]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "dependsOn": ["^build"],
              "options": {
                "cwd": "packages/shared/custom-eslint",
                "command": "tsc --build tsconfig.lib.json"
              },
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": ["typescript"]
                }
              ],
              "outputs": ["{projectRoot}/dist"],
              "syncGenerators": ["@nx/js:typescript-sync"],
              "metadata": {
                "technologies": ["typescript"],
                "description": "Builds the project with `tsc`.",
                "help": {
                  "command": "yarn tsc --build --help",
                  "example": {
                    "args": ["--force"]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": ["^build"],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": ["build-deps"],
              "executor": "nx:run-commands",
              "options": {
                "command": "yarn nx watch --projects custom-eslint --includeDependentProjects -- yarn nx build-deps custom-eslint"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/shared/custom-eslint",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "yarn eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": ["^nx-release-publish"],
              "options": {},
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "custom-eslint",
          "tags": ["npm:public", "type:eslint-config", "scope:shared"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@mono/custom-eslint",
              "packageExports": {
                "./package.json": "./package.json",
                ".": {
                  "development": "./src/index.js",
                  "require": "./dist/index.js",
                  "default": "./dist/index.js"
                },
                "./react": {
                  "development": "./src/configs/react.js",
                  "require": "./dist/configs/react.js",
                  "default": "./dist/configs/react.js"
                },
                "./prettier": {
                  "development": "./src/configs/prettier.config.js",
                  "require": "./dist/configs/prettier.config.js",
                  "default": "./dist/configs/prettier.config.js"
                }
              },
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "implicitDependencies": []
        }
      },
      "faithcircle-fe-e2e": {
        "name": "faithcircle-fe-e2e",
        "type": "lib",
        "data": {
          "root": "apps/fe/faithcircle-fe-e2e",
          "projectType": "library",
          "targets": {
            "typecheck": {
              "dependsOn": ["^typecheck"],
              "options": {
                "cwd": "apps/fe/faithcircle-fe-e2e",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": ["typescript"]
                }
              ],
              "outputs": [
                "{projectRoot}/out-tsc/playwright/**/*.d.ts",
                "{projectRoot}/out-tsc/playwright/tsconfig.tsbuildinfo"
              ],
              "syncGenerators": ["@nx/js:typescript-sync"],
              "metadata": {
                "technologies": ["typescript"],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "yarn tsc --build --help",
                  "example": {
                    "args": ["--force"]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "apps/fe/faithcircle-fe-e2e",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "yarn eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "e2e": {
              "options": {
                "cwd": "apps/fe/faithcircle-fe-e2e",
                "command": "playwright test"
              },
              "metadata": {
                "technologies": ["playwright"],
                "description": "Runs Playwright Tests",
                "help": {
                  "command": "yarn playwright test --help",
                  "example": {
                    "options": {
                      "workers": 1
                    }
                  }
                }
              },
              "dependsOn": [
                {
                  "projects": ["faithcircle-fe"],
                  "target": "preview"
                }
              ],
              "cache": true,
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": ["@playwright/test"]
                }
              ],
              "outputs": [
                "{projectRoot}/test-output/playwright/output",
                "{projectRoot}/test-output/playwright/report"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "e2e-ci--src/example.spec.ts": {
              "options": {
                "cwd": "apps/fe/faithcircle-fe-e2e",
                "env": {
                  "PLAYWRIGHT_HTML_OUTPUT_DIR": "test-output/playwright/report/src-example-spec-ts",
                  "PLAYWRIGHT_HTML_REPORT": "test-output/playwright/report/src-example-spec-ts"
                },
                "command": "playwright test src/example.spec.ts --output=test-output/playwright/output/src-example-spec-ts"
              },
              "metadata": {
                "technologies": ["playwright"],
                "description": "Runs Playwright Tests in src/example.spec.ts in CI",
                "help": {
                  "command": "yarn playwright test --help",
                  "example": {
                    "options": {
                      "workers": 1
                    }
                  }
                }
              },
              "dependsOn": [
                {
                  "projects": ["faithcircle-fe"],
                  "target": "preview"
                }
              ],
              "cache": true,
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": ["@playwright/test"]
                }
              ],
              "outputs": [
                "{projectRoot}/test-output/playwright/output/src-example-spec-ts",
                "{projectRoot}/test-output/playwright/report/src-example-spec-ts"
              ],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "e2e-ci": {
              "executor": "nx:noop",
              "cache": true,
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": ["@playwright/test"]
                }
              ],
              "outputs": [
                "{projectRoot}/test-output/playwright/output",
                "{projectRoot}/test-output/playwright/report"
              ],
              "dependsOn": [
                {
                  "target": "e2e-ci--src/example.spec.ts",
                  "projects": "self",
                  "params": "forward"
                }
              ],
              "metadata": {
                "technologies": ["playwright"],
                "description": "Runs Playwright Tests in CI",
                "nonAtomizedTarget": "e2e",
                "help": {
                  "command": "yarn playwright test --help",
                  "example": {
                    "options": {
                      "workers": 1
                    }
                  }
                }
              },
              "configurations": {},
              "options": {},
              "parallelism": true
            }
          },
          "metadata": {
            "targetGroups": {
              "E2E (CI)": ["e2e-ci--src/example.spec.ts", "e2e-ci"]
            }
          },
          "name": "faithcircle-fe-e2e",
          "implicitDependencies": [],
          "tags": []
        }
      },
      "@mono/components": {
        "name": "@mono/components",
        "type": "lib",
        "data": {
          "root": "packages/fe/components",
          "projectType": "library",
          "targets": {
            "typecheck": {
              "dependsOn": ["^typecheck"],
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": ["typescript"]
                }
              ],
              "outputs": [
                "{projectRoot}/**/*.js",
                "{projectRoot}/**/*.cjs",
                "{projectRoot}/**/*.mjs",
                "{projectRoot}/**/*.jsx",
                "{projectRoot}/**/*.js.map",
                "{projectRoot}/**/*.jsx.map",
                "{projectRoot}/**/*.d.ts",
                "{projectRoot}/**/*.d.cts",
                "{projectRoot}/**/*.d.mts",
                "{projectRoot}/**/*.d.ts.map",
                "{projectRoot}/**/*.d.cts.map",
                "{projectRoot}/**/*.d.mts.map",
                "{projectRoot}/tsconfig.tsbuildinfo",
                "{projectRoot}/dist/**/*.d.ts",
                "{projectRoot}/dist/tsconfig.lib.tsbuildinfo",
                "{projectRoot}/out-tsc/vitest/**/*.d.ts",
                "{projectRoot}/out-tsc/vitest/tsconfig.tsbuildinfo"
              ],
              "syncGenerators": ["@nx/js:typescript-sync"],
              "metadata": {
                "technologies": ["typescript", "typescript"],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "yarn tsc --build --help",
                  "example": {
                    "args": ["--force"]
                  }
                }
              },
              "executor": "nx:run-commands",
              "options": {
                "cwd": "packages/fe/components",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "options": {
                "cwd": "packages/fe/components",
                "command": "vite build"
              },
              "cache": true,
              "dependsOn": ["^build"],
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": ["vite"]
                }
              ],
              "outputs": ["{projectRoot}/dist"],
              "metadata": {
                "technologies": ["typescript", "vite"],
                "description": "Run Vite build",
                "help": {
                  "command": "yarn vite build --help",
                  "example": {
                    "options": {
                      "sourcemap": true,
                      "manifest": "manifest.json"
                    }
                  }
                }
              },
              "syncGenerators": ["@nx/js:typescript-sync"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": ["^build"],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": ["build-deps"],
              "executor": "nx:run-commands",
              "options": {
                "command": "yarn nx watch --projects components --includeDependentProjects -- yarn nx build-deps components"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/fe/components",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "yarn eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "packages/fe/components",
                "command": "vitest"
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": ["vitest"]
                },
                {
                  "env": "CI"
                }
              ],
              "outputs": ["{projectRoot}/test-output/vitest/coverage"],
              "metadata": {
                "technologies": ["vite"],
                "description": "Run Vite tests",
                "help": {
                  "command": "yarn vitest --help",
                  "example": {
                    "options": {
                      "bail": 1,
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build"]
            },
            "serve": {
              "continuous": true,
              "options": {
                "cwd": "packages/fe/components",
                "command": "vite"
              },
              "metadata": {
                "technologies": ["vite"],
                "description": "Starts Vite dev server",
                "help": {
                  "command": "yarn vite --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                },
                "deprecated": "Use devTargetName instead. This option will be removed in Nx 22."
              },
              "syncGenerators": ["@nx/js:typescript-sync"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "continuous": true,
              "options": {
                "cwd": "packages/fe/components",
                "command": "vite"
              },
              "metadata": {
                "technologies": ["vite"],
                "description": "Starts Vite dev server",
                "help": {
                  "command": "yarn vite --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                }
              },
              "syncGenerators": ["@nx/js:typescript-sync"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "preview": {
              "continuous": true,
              "dependsOn": ["build"],
              "options": {
                "cwd": "packages/fe/components",
                "command": "vite preview"
              },
              "metadata": {
                "technologies": ["vite"],
                "description": "Locally preview Vite production build",
                "help": {
                  "command": "yarn vite preview --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve-static": {
              "continuous": true,
              "executor": "@nx/web:file-server",
              "options": {
                "buildTarget": "build",
                "spa": true
              },
              "syncGenerators": ["@nx/js:typescript-sync"],
              "configurations": {},
              "parallelism": true
            }
          },
          "metadata": {},
          "name": "@mono/components",
          "implicitDependencies": [],
          "tags": []
        }
      },
      "faithcircle-fe": {
        "name": "faithcircle-fe",
        "type": "app",
        "data": {
          "root": "apps/fe/faithcircle-fe",
          "projectType": "application",
          "targets": {
            "typecheck": {
              "dependsOn": ["^typecheck"],
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": ["typescript"]
                }
              ],
              "outputs": [
                "{projectRoot}/**/*.js",
                "{projectRoot}/**/*.cjs",
                "{projectRoot}/**/*.mjs",
                "{projectRoot}/**/*.jsx",
                "{projectRoot}/**/*.js.map",
                "{projectRoot}/**/*.jsx.map",
                "{projectRoot}/**/*.d.ts",
                "{projectRoot}/**/*.d.cts",
                "{projectRoot}/**/*.d.mts",
                "{projectRoot}/**/*.d.ts.map",
                "{projectRoot}/**/*.d.cts.map",
                "{projectRoot}/**/*.d.mts.map",
                "{projectRoot}/tsconfig.tsbuildinfo",
                "{projectRoot}/dist/**/*.d.ts",
                "{projectRoot}/dist/tsconfig.app.tsbuildinfo",
                "{projectRoot}/out-tsc/vitest/**/*.d.ts",
                "{projectRoot}/out-tsc/vitest/tsconfig.tsbuildinfo"
              ],
              "syncGenerators": ["@nx/js:typescript-sync"],
              "metadata": {
                "technologies": ["typescript", "typescript"],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "yarn tsc --build --help",
                  "example": {
                    "args": ["--force"]
                  }
                }
              },
              "executor": "nx:run-commands",
              "options": {
                "cwd": "apps/fe/faithcircle-fe",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "apps/fe/faithcircle-fe",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "yarn eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "@nx/vite:test",
              "outputs": ["{options.reportsDirectory}"],
              "options": {
                "passWithNoTests": true,
                "reportsDirectory": "./test-output/vitest"
              },
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build"]
            },
            "build": {
              "executor": "@nx/vite:build",
              "outputs": ["{options.outputPath}"],
              "defaultConfiguration": "production",
              "options": {
                "outputPath": "dist/apps/fe/faithcircle-fe"
              },
              "configurations": {
                "development": {
                  "mode": "development"
                },
                "production": {
                  "mode": "production"
                }
              },
              "parallelism": true
            },
            "serve": {
              "executor": "@nx/vite:dev-server",
              "defaultConfiguration": "development",
              "options": {
                "buildTarget": "faithcircle-fe:build"
              },
              "configurations": {
                "development": {
                  "buildTarget": "faithcircle-fe:build:development",
                  "hmr": true
                },
                "production": {
                  "buildTarget": "faithcircle-fe:build:production",
                  "hmr": false
                }
              },
              "parallelism": true,
              "continuous": true
            },
            "dev": {
              "continuous": true,
              "options": {
                "cwd": "apps/fe/faithcircle-fe",
                "command": "vite"
              },
              "metadata": {
                "technologies": ["vite"],
                "description": "Starts Vite dev server",
                "help": {
                  "command": "yarn vite --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                }
              },
              "syncGenerators": ["@nx/js:typescript-sync"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "preview": {
              "executor": "@nx/vite:preview-server",
              "defaultConfiguration": "development",
              "options": {
                "buildTarget": "faithcircle-fe:build"
              },
              "configurations": {
                "development": {
                  "buildTarget": "faithcircle-fe:build:development"
                },
                "production": {
                  "buildTarget": "faithcircle-fe:build:production"
                }
              },
              "parallelism": true,
              "continuous": true
            },
            "serve-static": {
              "continuous": true,
              "executor": "@nx/web:file-server",
              "options": {
                "buildTarget": "build",
                "spa": true
              },
              "syncGenerators": ["@nx/js:typescript-sync"],
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": ["^build"],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": ["build-deps"],
              "executor": "nx:run-commands",
              "options": {
                "command": "yarn nx watch --projects faithcircle-fe --includeDependentProjects -- yarn nx build-deps faithcircle-fe"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@thrilled/faithcircle-fe",
              "isInPackageManagerWorkspaces": false
            }
          },
          "name": "faithcircle-fe",
          "tags": ["npm:private", "type:app", "scope:fe"],
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/fe/faithcircle-fe/src",
          "implicitDependencies": []
        }
      },
      "@thrilled/shared": {
        "name": "@thrilled/shared",
        "type": "lib",
        "data": {
          "root": "packages/shared/types",
          "projectType": "library",
          "targets": {
            "typecheck": {
              "dependsOn": ["^typecheck"],
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": ["typescript"]
                }
              ],
              "outputs": [
                "{projectRoot}/**/*.js",
                "{projectRoot}/**/*.cjs",
                "{projectRoot}/**/*.mjs",
                "{projectRoot}/**/*.jsx",
                "{projectRoot}/**/*.js.map",
                "{projectRoot}/**/*.jsx.map",
                "{projectRoot}/**/*.d.ts",
                "{projectRoot}/**/*.d.cts",
                "{projectRoot}/**/*.d.mts",
                "{projectRoot}/**/*.d.ts.map",
                "{projectRoot}/**/*.d.cts.map",
                "{projectRoot}/**/*.d.mts.map",
                "{projectRoot}/tsconfig.tsbuildinfo",
                "{projectRoot}/dist/**/*.d.ts",
                "{projectRoot}/dist/tsconfig.lib.tsbuildinfo",
                "{projectRoot}/out-tsc/vitest/**/*.d.ts",
                "{projectRoot}/out-tsc/vitest/tsconfig.tsbuildinfo"
              ],
              "syncGenerators": ["@nx/js:typescript-sync"],
              "metadata": {
                "technologies": ["typescript", "typescript"],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "yarn tsc --build --help",
                  "example": {
                    "args": ["--force"]
                  }
                }
              },
              "executor": "nx:run-commands",
              "options": {
                "cwd": "packages/shared/types",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "options": {
                "cwd": "packages/shared/types",
                "command": "vite build"
              },
              "cache": true,
              "dependsOn": ["^build"],
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": ["vite"]
                }
              ],
              "outputs": ["{projectRoot}/dist"],
              "metadata": {
                "technologies": ["typescript", "vite"],
                "description": "Run Vite build",
                "help": {
                  "command": "yarn vite build --help",
                  "example": {
                    "options": {
                      "sourcemap": true,
                      "manifest": "manifest.json"
                    }
                  }
                }
              },
              "syncGenerators": ["@nx/js:typescript-sync"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": ["^build"],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": ["build-deps"],
              "executor": "nx:run-commands",
              "options": {
                "command": "yarn nx watch --projects @thrilled/shared --includeDependentProjects -- yarn nx build-deps @thrilled/shared"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/shared/types",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "yarn eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "packages/shared/types",
                "command": "vitest"
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": ["vitest"]
                },
                {
                  "env": "CI"
                }
              ],
              "outputs": ["{projectRoot}/test-output/vitest/coverage"],
              "metadata": {
                "technologies": ["vite"],
                "description": "Run Vite tests",
                "help": {
                  "command": "yarn vitest --help",
                  "example": {
                    "options": {
                      "bail": 1,
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build"]
            },
            "serve": {
              "continuous": true,
              "options": {
                "cwd": "packages/shared/types",
                "command": "vite"
              },
              "metadata": {
                "technologies": ["vite"],
                "description": "Starts Vite dev server",
                "help": {
                  "command": "yarn vite --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                },
                "deprecated": "Use devTargetName instead. This option will be removed in Nx 22."
              },
              "syncGenerators": ["@nx/js:typescript-sync"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "continuous": true,
              "options": {
                "cwd": "packages/shared/types",
                "command": "vite"
              },
              "metadata": {
                "technologies": ["vite"],
                "description": "Starts Vite dev server",
                "help": {
                  "command": "yarn vite --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                }
              },
              "syncGenerators": ["@nx/js:typescript-sync"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "preview": {
              "continuous": true,
              "dependsOn": ["build"],
              "options": {
                "cwd": "packages/shared/types",
                "command": "vite preview"
              },
              "metadata": {
                "technologies": ["vite"],
                "description": "Locally preview Vite production build",
                "help": {
                  "command": "yarn vite preview --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve-static": {
              "continuous": true,
              "executor": "@nx/web:file-server",
              "options": {
                "buildTarget": "build",
                "spa": true
              },
              "syncGenerators": ["@nx/js:typescript-sync"],
              "configurations": {},
              "parallelism": true
            }
          },
          "metadata": {},
          "name": "@thrilled/shared",
          "implicitDependencies": [],
          "tags": []
        }
      },
      "be-types": {
        "name": "be-types",
        "type": "lib",
        "data": {
          "root": "packages/be/be-types",
          "projectType": "library",
          "targets": {
            "typecheck": {
              "dependsOn": ["build", "^typecheck"],
              "options": {
                "cwd": "packages/be/be-types",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": ["typescript"]
                }
              ],
              "outputs": [
                "{projectRoot}/**/*.js",
                "{projectRoot}/**/*.cjs",
                "{projectRoot}/**/*.mjs",
                "{projectRoot}/**/*.jsx",
                "{projectRoot}/**/*.js.map",
                "{projectRoot}/**/*.jsx.map",
                "{projectRoot}/**/*.d.ts",
                "{projectRoot}/**/*.d.cts",
                "{projectRoot}/**/*.d.mts",
                "{projectRoot}/**/*.d.ts.map",
                "{projectRoot}/**/*.d.cts.map",
                "{projectRoot}/**/*.d.mts.map",
                "{projectRoot}/tsconfig.tsbuildinfo",
                "{projectRoot}/dist/**/*.d.ts",
                "{projectRoot}/dist/tsconfig.lib.tsbuildinfo",
                "{projectRoot}/out-tsc/jest/**/*.d.ts",
                "{projectRoot}/out-tsc/jest/tsconfig.tsbuildinfo"
              ],
              "syncGenerators": ["@nx/js:typescript-sync"],
              "metadata": {
                "technologies": ["typescript"],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "yarn tsc --build --help",
                  "example": {
                    "args": ["--force"]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "dependsOn": ["^build"],
              "options": {
                "cwd": "packages/be/be-types",
                "command": "tsc --build tsconfig.lib.json"
              },
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": ["typescript"]
                }
              ],
              "outputs": ["{projectRoot}/dist"],
              "syncGenerators": ["@nx/js:typescript-sync"],
              "metadata": {
                "technologies": ["typescript"],
                "description": "Builds the project with `tsc`.",
                "help": {
                  "command": "yarn tsc --build --help",
                  "example": {
                    "args": ["--force"]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": ["^build"],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": ["build-deps"],
              "executor": "nx:run-commands",
              "options": {
                "command": "yarn nx watch --projects be-types --includeDependentProjects -- yarn nx build-deps be-types"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/be/be-types",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "yarn eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "packages/be/be-types",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "yarn jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js",
                {
                  "externalDependencies": ["jest"]
                }
              ],
              "outputs": ["{projectRoot}/test-output/jest/coverage"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build"]
            }
          },
          "name": "be-types",
          "tags": ["npm:private", "type:lib", "scope:be"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@thrilled/be-types",
              "packageExports": {
                "./package.json": "./package.json",
                ".": {
                  "development": "./src/index.ts",
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js",
                  "default": "./dist/index.js"
                }
              },
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "implicitDependencies": []
        }
      },
      "@mono/styles": {
        "name": "@mono/styles",
        "type": "lib",
        "data": {
          "root": "packages/fe/styles",
          "projectType": "library",
          "targets": {
            "typecheck": {
              "dependsOn": ["^typecheck"],
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": ["typescript"]
                }
              ],
              "outputs": [
                "{projectRoot}/**/*.js",
                "{projectRoot}/**/*.cjs",
                "{projectRoot}/**/*.mjs",
                "{projectRoot}/**/*.jsx",
                "{projectRoot}/**/*.js.map",
                "{projectRoot}/**/*.jsx.map",
                "{projectRoot}/**/*.d.ts",
                "{projectRoot}/**/*.d.cts",
                "{projectRoot}/**/*.d.mts",
                "{projectRoot}/**/*.d.ts.map",
                "{projectRoot}/**/*.d.cts.map",
                "{projectRoot}/**/*.d.mts.map",
                "{projectRoot}/tsconfig.tsbuildinfo",
                "{projectRoot}/dist/**/*.d.ts",
                "{projectRoot}/dist/tsconfig.lib.tsbuildinfo",
                "{projectRoot}/out-tsc/vitest/**/*.d.ts",
                "{projectRoot}/out-tsc/vitest/tsconfig.tsbuildinfo"
              ],
              "syncGenerators": ["@nx/js:typescript-sync"],
              "metadata": {
                "technologies": ["typescript", "typescript"],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "yarn tsc --build --help",
                  "example": {
                    "args": ["--force"]
                  }
                }
              },
              "executor": "nx:run-commands",
              "options": {
                "cwd": "packages/fe/styles",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "options": {
                "cwd": "packages/fe/styles",
                "command": "vite build"
              },
              "cache": true,
              "dependsOn": ["^build"],
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": ["vite"]
                }
              ],
              "outputs": ["{projectRoot}/dist"],
              "metadata": {
                "technologies": ["typescript", "vite"],
                "description": "Run Vite build",
                "help": {
                  "command": "yarn vite build --help",
                  "example": {
                    "options": {
                      "sourcemap": true,
                      "manifest": "manifest.json"
                    }
                  }
                }
              },
              "syncGenerators": ["@nx/js:typescript-sync"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": ["^build"],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": ["build-deps"],
              "executor": "nx:run-commands",
              "options": {
                "command": "yarn nx watch --projects styles --includeDependentProjects -- yarn nx build-deps styles"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/fe/styles",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "yarn eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "packages/fe/styles",
                "command": "vitest"
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                {
                  "externalDependencies": ["vitest"]
                },
                {
                  "env": "CI"
                }
              ],
              "outputs": ["{projectRoot}/test-output/vitest/coverage"],
              "metadata": {
                "technologies": ["vite"],
                "description": "Run Vite tests",
                "help": {
                  "command": "yarn vitest --help",
                  "example": {
                    "options": {
                      "bail": 1,
                      "coverage": true
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build"]
            },
            "serve": {
              "continuous": true,
              "options": {
                "cwd": "packages/fe/styles",
                "command": "vite"
              },
              "metadata": {
                "technologies": ["vite"],
                "description": "Starts Vite dev server",
                "help": {
                  "command": "yarn vite --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                },
                "deprecated": "Use devTargetName instead. This option will be removed in Nx 22."
              },
              "syncGenerators": ["@nx/js:typescript-sync"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "continuous": true,
              "options": {
                "cwd": "packages/fe/styles",
                "command": "vite"
              },
              "metadata": {
                "technologies": ["vite"],
                "description": "Starts Vite dev server",
                "help": {
                  "command": "yarn vite --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                }
              },
              "syncGenerators": ["@nx/js:typescript-sync"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "preview": {
              "continuous": true,
              "dependsOn": ["build"],
              "options": {
                "cwd": "packages/fe/styles",
                "command": "vite preview"
              },
              "metadata": {
                "technologies": ["vite"],
                "description": "Locally preview Vite production build",
                "help": {
                  "command": "yarn vite preview --help",
                  "example": {
                    "options": {
                      "port": 3000
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "serve-static": {
              "continuous": true,
              "executor": "@nx/web:file-server",
              "options": {
                "buildTarget": "build",
                "spa": true
              },
              "syncGenerators": ["@nx/js:typescript-sync"],
              "configurations": {},
              "parallelism": true
            }
          },
          "metadata": {},
          "name": "@mono/styles",
          "implicitDependencies": [],
          "tags": []
        }
      },
      "core": {
        "name": "core",
        "type": "lib",
        "data": {
          "root": "packages/be/core",
          "projectType": "library",
          "targets": {
            "typecheck": {
              "dependsOn": ["build", "^typecheck"],
              "options": {
                "cwd": "packages/be/core",
                "command": "tsc --build --emitDeclarationOnly"
              },
              "cache": true,
              "inputs": [
                "production",
                {
                  "dependentTasksOutputFiles": "**/*.d.ts"
                },
                {
                  "externalDependencies": ["typescript"]
                }
              ],
              "outputs": [
                "{projectRoot}/**/*.js",
                "{projectRoot}/**/*.cjs",
                "{projectRoot}/**/*.mjs",
                "{projectRoot}/**/*.jsx",
                "{projectRoot}/**/*.js.map",
                "{projectRoot}/**/*.jsx.map",
                "{projectRoot}/**/*.d.ts",
                "{projectRoot}/**/*.d.cts",
                "{projectRoot}/**/*.d.mts",
                "{projectRoot}/**/*.d.ts.map",
                "{projectRoot}/**/*.d.cts.map",
                "{projectRoot}/**/*.d.mts.map",
                "{projectRoot}/tsconfig.tsbuildinfo",
                "{projectRoot}/out-tsc/jest/**/*.d.ts",
                "{projectRoot}/out-tsc/jest/tsconfig.tsbuildinfo"
              ],
              "syncGenerators": ["@nx/js:typescript-sync"],
              "metadata": {
                "technologies": ["typescript"],
                "description": "Runs type-checking for the project.",
                "help": {
                  "command": "yarn tsc --build --help",
                  "example": {
                    "args": ["--force"]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "dependsOn": ["^build"],
              "options": {
                "cwd": "packages/be/core",
                "command": "tsc --build tsconfig.lib.json"
              },
              "cache": true,
              "inputs": [
                "production",
                "^production",
                {
                  "externalDependencies": ["typescript"]
                }
              ],
              "outputs": ["{projectRoot}/dist"],
              "syncGenerators": ["@nx/js:typescript-sync"],
              "metadata": {
                "technologies": ["typescript"],
                "description": "Builds the project with `tsc`.",
                "help": {
                  "command": "yarn tsc --build --help",
                  "example": {
                    "args": ["--force"]
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "build-deps": {
              "dependsOn": ["^build"],
              "configurations": {},
              "options": {},
              "parallelism": true,
              "executor": "nx:noop"
            },
            "watch-deps": {
              "continuous": true,
              "dependsOn": ["build-deps"],
              "executor": "nx:run-commands",
              "options": {
                "command": "yarn nx watch --projects core --includeDependentProjects -- yarn nx build-deps core"
              },
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "cache": true,
              "options": {
                "cwd": "packages/be/core",
                "command": "eslint ."
              },
              "inputs": [
                "default",
                "^default",
                "{workspaceRoot}/.eslintrc.json",
                "{projectRoot}/.eslintrc.json",
                "{workspaceRoot}/tools/eslint-rules/**/*",
                {
                  "externalDependencies": ["eslint"]
                }
              ],
              "outputs": ["{options.outputFile}"],
              "metadata": {
                "technologies": ["eslint"],
                "description": "Runs ESLint on project",
                "help": {
                  "command": "yarn eslint --help",
                  "example": {
                    "options": {
                      "max-warnings": 0
                    }
                  }
                }
              },
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "options": {
                "cwd": "packages/be/core",
                "env": {
                  "TS_NODE_COMPILER_OPTIONS": "{\"moduleResolution\":\"node10\",\"module\":\"commonjs\",\"customConditions\":null}"
                },
                "command": "jest"
              },
              "metadata": {
                "technologies": ["jest"],
                "description": "Run Jest Tests",
                "help": {
                  "command": "yarn jest --help",
                  "example": {
                    "options": {
                      "coverage": true
                    }
                  }
                }
              },
              "cache": true,
              "inputs": [
                "default",
                "^production",
                "{workspaceRoot}/jest.preset.js",
                {
                  "externalDependencies": ["jest"]
                }
              ],
              "outputs": ["{projectRoot}/test-output/jest/coverage"],
              "executor": "nx:run-commands",
              "configurations": {},
              "parallelism": true,
              "dependsOn": ["^build"]
            }
          },
          "name": "core",
          "tags": ["npm:private", "type:lib", "scope:be"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@mono/be-core",
              "packageExports": {
                "./package.json": "./package.json",
                ".": {
                  "development": "./src/index.ts",
                  "types": "./dist/index.d.ts",
                  "import": "./dist/index.js",
                  "default": "./dist/index.js"
                }
              },
              "packageMain": "./dist/index.js",
              "isInPackageManagerWorkspaces": true
            }
          },
          "implicitDependencies": []
        }
      },
      "base-be": {
        "name": "base-be",
        "type": "app",
        "data": {
          "root": "apps/be/base",
          "projectType": "application",
          "targets": {
            "typecheck": {
              "executor": "nx:run-commands",
              "options": {
                "command": "tsc --noEmit",
                "cwd": "apps/be/base"
              },
              "dependsOn": ["^typecheck"],
              "configurations": {},
              "parallelism": true
            },
            "lint": {
              "executor": "nx:run-commands",
              "options": {
                "command": "eslint --ignore-path .gitignore --ext .ts src/",
                "cwd": "apps/be/base"
              },
              "configurations": {},
              "parallelism": true
            },
            "test": {
              "executor": "nx:run-commands",
              "options": {
                "command": "jest --forceExit --detectOpenHandles",
                "cwd": "apps/be/base"
              },
              "dependsOn": ["^build"],
              "configurations": {},
              "parallelism": true
            },
            "nx-release-publish": {
              "executor": "@nx/js:release-publish",
              "dependsOn": ["^nx-release-publish"],
              "options": {},
              "configurations": {},
              "parallelism": true
            },
            "build": {
              "executor": "nx:run-commands",
              "options": {
                "command": "swc src -d dist --source-maps --copy-files",
                "cwd": "apps/be/base"
              },
              "outputs": ["{projectRoot}/dist"],
              "dependsOn": ["^build"],
              "configurations": {},
              "parallelism": true
            },
            "build:tsc": {
              "executor": "nx:run-commands",
              "options": {
                "command": "tsc && tsc-alias",
                "cwd": "apps/be/base"
              },
              "outputs": ["{projectRoot}/dist"],
              "configurations": {},
              "parallelism": true
            },
            "serve": {
              "executor": "nx:run-commands",
              "options": {
                "command": "cross-env NODE_ENV=development nodemon",
                "cwd": "apps/be/base"
              },
              "dependsOn": [],
              "configurations": {},
              "parallelism": true
            },
            "dev": {
              "executor": "nx:run-commands",
              "options": {
                "command": "cross-env NODE_ENV=development nodemon",
                "cwd": "apps/be/base"
              },
              "dependsOn": [],
              "configurations": {},
              "parallelism": true
            },
            "start": {
              "executor": "nx:run-commands",
              "options": {
                "command": "npm run build && cross-env NODE_ENV=production node dist/server.js",
                "cwd": "apps/be/base"
              },
              "dependsOn": ["build"],
              "configurations": {},
              "parallelism": true
            },
            "lint:fix": {
              "executor": "nx:run-commands",
              "options": {
                "command": "npm run lint -- --fix",
                "cwd": "apps/be/base"
              },
              "configurations": {},
              "parallelism": true
            },
            "check-env": {
              "executor": "nx:run-commands",
              "options": {
                "command": "dotenv -e .env -- bash -c 'env | grep POSTGRES'",
                "cwd": "apps/be/base"
              },
              "configurations": {},
              "parallelism": true
            },
            "migrate:create": {
              "executor": "nx:run-commands",
              "options": {
                "command": "node-pg-migrate create",
                "cwd": "apps/be/base"
              },
              "configurations": {},
              "parallelism": true
            },
            "premigrate:up": {
              "executor": "nx:run-commands",
              "options": {
                "command": "dotenv -e .env -- node src/scripts/checkEnv.js",
                "cwd": "apps/be/base"
              },
              "configurations": {},
              "parallelism": true
            },
            "migrate:up": {
              "executor": "nx:run-commands",
              "options": {
                "command": "dotenv -e .env -- node-pg-migrate up",
                "cwd": "apps/be/base"
              },
              "configurations": {},
              "parallelism": true
            },
            "migrate:down": {
              "executor": "nx:run-commands",
              "options": {
                "command": "dotenv -e .env -- node-pg-migrate down",
                "cwd": "apps/be/base"
              },
              "configurations": {},
              "parallelism": true
            },
            "migrate:status": {
              "executor": "nx:run-commands",
              "options": {
                "command": "dotenv -e .env -- node-pg-migrate status",
                "cwd": "apps/be/base"
              },
              "configurations": {},
              "parallelism": true
            },
            "seed:regions": {
              "executor": "nx:run-commands",
              "options": {
                "command": "dotenv -e .env -- node src/scripts/seed-regions.js",
                "cwd": "apps/be/base"
              },
              "configurations": {},
              "parallelism": true
            },
            "deploy:prod": {
              "executor": "nx:run-commands",
              "options": {
                "command": "npm run build && pm2 start ecosystem.config.js --only prod",
                "cwd": "apps/be/base"
              },
              "dependsOn": ["build"],
              "configurations": {},
              "parallelism": true
            },
            "deploy:dev": {
              "executor": "nx:run-commands",
              "options": {
                "command": "pm2 start ecosystem.config.js --only dev",
                "cwd": "apps/be/base"
              },
              "configurations": {},
              "parallelism": true
            }
          },
          "name": "base-be",
          "tags": ["npm:public", "type:app", "scope:be"],
          "metadata": {
            "targetGroups": {},
            "description": "TypeScript + PostgreSQL + Express API Server",
            "js": {
              "packageName": "@thrilled/base-be",
              "isInPackageManagerWorkspaces": true
            }
          },
          "$schema": "../../../node_modules/nx/schemas/project-schema.json",
          "sourceRoot": "apps/be/base/src",
          "implicitDependencies": []
        }
      },
      "@thrilled/source": {
        "name": "@thrilled/source",
        "type": "lib",
        "data": {
          "root": ".",
          "name": "@thrilled/source",
          "includedScripts": [],
          "tags": ["npm:private"],
          "metadata": {
            "targetGroups": {},
            "js": {
              "packageName": "@thrilled/source",
              "isInPackageManagerWorkspaces": true
            }
          },
          "targets": {
            "local-registry": {
              "executor": "@nx/js:verdaccio",
              "options": {
                "port": 4873,
                "config": ".verdaccio/config.yml",
                "storage": "tmp/local-registry/storage"
              },
              "configurations": {},
              "parallelism": true,
              "continuous": true
            }
          },
          "implicitDependencies": []
        }
      }
    },
    "dependencies": {
      "@thrilled/faithcircle-be-e2e": [],
      "@thrilled/faithcircle-be": [
        {
          "source": "@thrilled/faithcircle-be",
          "target": "core",
          "type": "static"
        }
      ],
      "custom-eslint": [],
      "faithcircle-fe-e2e": [],
      "@mono/components": [],
      "faithcircle-fe": [],
      "@thrilled/shared": [
        {
          "source": "@thrilled/shared",
          "target": "custom-eslint",
          "type": "static"
        }
      ],
      "be-types": [],
      "@mono/styles": [
        {
          "source": "@mono/styles",
          "target": "custom-eslint",
          "type": "static"
        }
      ],
      "core": [
        {
          "source": "core",
          "target": "be-types",
          "type": "static"
        }
      ],
      "base-be": [
        {
          "source": "base-be",
          "target": "core",
          "type": "static"
        }
      ],
      "@thrilled/source": [
        {
          "source": "@thrilled/source",
          "target": "custom-eslint",
          "type": "static"
        }
      ]
    }
  }
}
