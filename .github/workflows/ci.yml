name: CI

on:
  push:
    branches: [main, develop, 'feature/*']
  pull_request:
    branches: [main, develop]

permissions:
  actions: read
  contents: read

env:
  NX_CLOUD_ACCESS_TOKEN: ${{ secrets.NX_CLOUD_ACCESS_TOKEN }}
  NODE_VERSION: '20'

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    timeout-minutes: 60

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: thrilled_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Setup NX
        uses: nrwl/nx-set-shas@v4

      - name: Restore NX cache
        uses: actions/cache@v4
        with:
          path: |
            ~/.nx
            node_modules/.cache/nx
          key: ${{ runner.os }}-nx-${{ hashFiles('**/package-lock.json', '**/yarn.lock') }}
          restore-keys: |
            ${{ runner.os }}-nx-

      - name: Check formatting
        run: yarn nx format:check

      - name: Lint affected projects
        run: yarn nx affected --target=lint --parallel=3

      - name: Type check affected projects
        run: yarn nx affected --target=typecheck --parallel=3

      - name: Test affected projects
        run: yarn nx affected --target=test --parallel=3 --ci --code-coverage
        env:
          DATABASE_URL: postgresql://test:test@localhost:5432/thrilled_test
          REDIS_URL: redis://localhost:6379
          JWT_SECRET: test-secret-key-for-ci
          NODE_ENV: test

      - name: Build affected projects
        run: yarn nx affected --target=build --parallel=3

      - name: Upload coverage reports
        uses: codecov/codecov-action@v4
        if: always()
        with:
          directory: ./coverage
          fail_ci_if_error: false
          token: ${{ secrets.CODECOV_TOKEN }}

      - name: Archive build artifacts
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: build-artifacts
          path: |
            dist/
            apps/*/dist/
          retention-days: 30

  e2e-tests:
    runs-on: ubuntu-latest
    timeout-minutes: 60
    needs: [build-and-test]

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_USER: test
          POSTGRES_PASSWORD: test
          POSTGRES_DB: thrilled_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

      redis:
        image: redis:7
        options: >-
          --health-cmd "redis-cli ping"
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 6379:6379

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}
          cache: 'yarn'

      - name: Install dependencies
        run: yarn install --frozen-lockfile

      - name: Setup NX
        uses: nrwl/nx-set-shas@v4

      - name: Install Playwright browsers
        run: yarn playwright install --with-deps

      - name: Run E2E tests
        run: yarn nx affected --target=e2e --parallel=1
        env:
          DATABASE_URL: postgresql://test:test@localhost:5432/thrilled_test
          REDIS_URL: redis://localhost:6379
          JWT_SECRET: test-secret-key-for-ci
          NODE_ENV: test

      - name: Upload Playwright report
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: playwright-report
          path: |
            apps/*/playwright-report/
            apps/*/test-results/
          retention-days: 30
